# GitHub Actions 专用 Dockerfile
FROM golang:1.24.0-alpine AS go-builder  

WORKDIR /build

RUN apk update && \
    apk add git build-base gcc musl-dev binutils-gold

# 设置环境变量以启用工具链自动下载
ENV GOTOOLCHAIN=auto
ENV GO111MODULE=on
ENV CGO_ENABLED=1 

COPY go.mod go.sum ./
RUN go mod download

COPY . .
RUN go install github.com/swaggo/swag/cmd/swag@latest

# 前端文件已经预构建，直接使用
# 验证前端文件是否存在
RUN ls -la web/dist/ && test -f web/dist/index.html

RUN go run scripts/build.go -output MediaTools

# 最终运行阶段
FROM alpine:latest
WORKDIR /app
RUN apk add --no-cache tzdata
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

COPY --from=go-builder /build/MediaTools .
RUN chmod +x ./MediaTools

EXPOSE 5000
VOLUME ["/app/data", "/app/logs"]

ENTRYPOINT ["./MediaTools"]
CMD ["-server"]
