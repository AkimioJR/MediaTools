name: Core Builder for Docker

on:
  workflow_call:
    inputs:
      IS_LATEST:
        description: "是否发布为 Docker 镜像最新版本"
        required: true
        type: boolean
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
env:
  IS_LATEST: ${{ inputs.IS_LATEST }}
  VERSION: ""

jobs:
  build-docker-core:
    runs-on: ubuntu-latest
    name: Build Docker Image Core
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download Web Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: web/dist/

      - name: Update Version Info
        run: |
          VERSION=$(go run scripts/build.go -version)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/mediatools
          tags: |
            type=raw,value=latest,enable=${{ env.IS_LATEST }}
            type=raw,value=${{ env.VERSION }},enable=true

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.ci
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/s390x
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}-docker
          cache-to: type=gha, scope=${{ github.workflow }}-docker
